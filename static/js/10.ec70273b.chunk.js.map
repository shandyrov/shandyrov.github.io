{"version":3,"sources":["utils/Theme.js","layout/SimpleBreadcrumbs.js","components/Footer.js","components/PrismSyntaxHighlighter.js","pages/Category/Gists/Post.js"],"names":["getHeaderBackgroundColor","theme","palette","type","getFooterBackgroundColor","StyledBreadcrumb","withStyles","root","backgroundColor","grey","height","spacing","color","primary","contrastText","fontWeight","typography","fontWeightRegular","warning","boxShadow","shadows","emphasize","marginTop","Chip","SimpleBreadcrumbs","links","current","pageNumber","useTheme","aria-label","style","paddingTop","paddingBottom","map","link","index","component","Link","href","label","title","icon","fontSize","padding","to","pathname","category","cursor","dark","Typography","Footer","className","marginLeft","bottom","maxWidth","variant","align","PrismSyntaxHighlighter","props","codeString","children","language","whatLanguage","okaidia","a11yDark","useStyles","makeStyles","width","container","display","flexDirection","breakpoints","between","minHeight","up","Post","location","useLocation","description","gistId","classes","useState","setRowCount","content","setContent","setLanguage","useEffect","document","localStorage","getItem","console","log","loadContent","setItem","fetch","then","res","json","data","keys","Object","files","length","first","shift","rows","split","Fragment","only","slice","toLowerCase","getLang"],"mappings":"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","file":"static/js/10.ec70273b.chunk.js","sourcesContent":["export function getHeaderBackgroundColor(theme) {\n  return theme.palette.type === \"dark\" ? \"#252525\" : \"#0F1C24\";\n}\nexport function getFooterBackgroundColor(theme) {\n  return theme.palette.type === \"dark\" ? \"#252525\" : \"#0F1C24\";\n}\n","import React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Breadcrumbs from \"@material-ui/core/Breadcrumbs\";\nimport { Link } from \"react-router-dom\";\nimport { MuiThemeProvider, useTheme } from \"@material-ui/core/styles\";\nimport { emphasize, withStyles } from \"@material-ui/core/styles\";\nimport Chip from \"@material-ui/core/Chip\";\nimport HomeIcon from \"@material-ui/icons/Home\";\n\nconst StyledBreadcrumb = withStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.grey[700],\n    height: theme.spacing(2),\n    color: theme.palette.primary.contrastText,\n    fontWeight: theme.typography.fontWeightRegular,\n    \"&:hover, &:focus\": {\n      backgroundColor: theme.palette.warning,\n    },\n    \"&:active\": {\n      boxShadow: theme.shadows[1],\n      backgroundColor: emphasize(theme.palette.grey[300], 0.12),\n    },\n    marginTop: \"5px\",\n  },\n}))(Chip);\n\nexport default function SimpleBreadcrumbs({ links = [], current, pageNumber }) {\n  const theme = useTheme();\n  return (\n    <MuiThemeProvider theme={theme}>\n      <Breadcrumbs\n        aria-label=\"breadcrumb\"\n        style={{\n          paddingTop: theme.spacing(2),\n          paddingBottom: theme.spacing(1),\n        }}\n      >\n        {links.map((link, index) => {\n          return (\n            <StyledBreadcrumb\n              key={index}\n              component={Link}\n              href={link.link}\n              label={link.title}\n              icon={\n                index === 0 ? (\n                  <HomeIcon\n                    fontSize=\"small\"\n                    style={{\n                      color: theme.palette.type === \"dark\" ? '\"#999\"' : \"#fff\",\n                      padding: theme.spacing(0.2),\n                    }}\n                  />\n                ) : null\n              }\n              to={{\n                pathname: link.link,\n                pageNumber: pageNumber,\n                category: link.category,\n              }}\n              style={{\n                padding: theme.spacing(1.4),\n                cursor: \"pointer\",\n                color: theme.palette.type === \"dark\" ? \"#ccc\" : \"#fff\",\n                backgroundColor:\n                  theme.palette.type === \"dark\"\n                    ? \"#555\"\n                    : theme.palette.primary.dark,\n              }}\n            />\n          );\n        })}\n        <StyledBreadcrumb\n          component={Typography}\n          label={current}\n          style={{\n            padding: theme.spacing(1.4),\n            color: theme.palette.type === \"dark\" ? \"#ccc\" : \"#fff\",\n            backgroundColor:\n              theme.palette.type === \"dark\"\n                ? \"#555\"\n                : theme.palette.primary.dark,\n          }}\n        />\n        -\n      </Breadcrumbs>\n    </MuiThemeProvider>\n  );\n}\n","import React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Container from \"@material-ui/core/Container\";\nimport { getFooterBackgroundColor } from \"../utils/Theme\";\nimport { useTheme } from \"@material-ui/core/styles\";\n\nfunction Footer() {\n  const theme = useTheme();\n\n  return (\n    <footer\n      className=\"\"\n      style={{\n        backgroundColor: getFooterBackgroundColor(theme),\n        marginLeft: \"2px\",\n        bottom: 0,\n        padding: \"10px\",\n      }}\n    >\n      <Container maxWidth=\"lg\" style={{ height: theme.spacing(7) }}>\n        <Typography\n          variant=\"subtitle1\"\n          align=\"center\"\n          color=\"textPrimary\"\n          component=\"p\"\n        >\n          Copyright Â© 2020 - 2021\n        </Typography>\n        <Typography\n          component=\"p\"\n          color=\"textPrimary\"\n          align=\"center\"\n          variant=\"subtitle1\"\n        >\n          All rights reserved\n        </Typography>\n        {/* <Copyright /> */}\n      </Container>\n    </footer>\n  );\n}\nexport default Footer;\n","import React from \"react\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport { Prism as ReactSyntaxHighlighter } from \"react-syntax-highlighter\";\nimport {\n  a11yDark,\n  okaidia,\n} from \"react-syntax-highlighter/dist/esm/styles/prism\";\n//import { darcula } from \"react-syntax-highlighter/dist/esm/styles/hljs\";\n// cb darkula\nexport default function PrismSyntaxHighlighter(props) {\n  const theme = useTheme();\n  const codeString = props.children;\n\n  const whatLanguage = () => {\n    switch (props.className) {\n      case \"lang-js\":\n        return \"javascript\";\n      case \"lang-php\":\n        return \"php\";\n      case \"lang-java\":\n        return \"java\";\n      default:\n        return \"c\";\n    }\n  };\n\n  const getTheme = () => {\n    //console.log(theme.palette.type);\n    return theme.palette.type === \"dark\" ? okaidia : a11yDark;\n  };\n\n  return (\n    //showLineNumbers\n    <ReactSyntaxHighlighter language={whatLanguage()} style={getTheme()}>\n      {codeString}\n    </ReactSyntaxHighlighter>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport SimpleBreadcrumbs from \"../../../layout/SimpleBreadcrumbs\";\nimport PrismSyntaxHighlighter from \"../../../components/PrismSyntaxHighlighter\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport Particles from \"react-particles-js\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport { getHeaderBackgroundColor } from \"../../../utils/Theme\";\nimport Footer from \"../../../components/Footer\";\n\nimport {\n  useLocation,\n  //useParams,\n  //useHistory,\n  //useRouteMatch,\n} from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: 300,\n  },\n  container: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    [theme.breakpoints.between(\"xs\", \"md\")]: {\n      minHeight: \"calc(100vh - 131px)\",\n    },\n    [theme.breakpoints.up(\"md\")]: {\n      minHeight: \"calc(100vh - 225px)\",\n    },\n  },\n}));\n\nexport default function Post() {\n  const theme = useTheme();\n  const location = useLocation();\n\n  const description = location.description || \"\";\n  const pageNumber = location.pageNumber;\n  const gistId = location.gistId;\n  const classes = useStyles();\n  const [rowCount, setRowCount] = useState(0);\n  const [content, setContent] = useState(\"\");\n  const [language, setLanguage] = useState(\"Bash\");\n  //const imageFolder = \"/static/img\";\n\n  useEffect(() => {\n    document.title = \"ÐÐ¾Ð²Ð¾ÑÑÐ¸\";\n    if (!localStorage.getItem(`gist-${gistId}`)) {\n      console.log(\"---load from internet---\");\n      loadContent();\n    } else {\n      //console.log(\"---load from storage---\");\n      const language = localStorage.getItem(`gist-lang-${gistId}`);\n      //console.log(\"=============\");\n      //console.log(language);\n      setLanguage(language ? language : \"lang-js\");\n      setContent(localStorage.getItem(`gist-${gistId}`));\n    }\n  }, []);\n\n  useEffect(() => {\n    if (content && !localStorage.getItem(`gist-${gistId}`)) {\n      //console.log(\"===save content to storage===\");\n\n      localStorage.setItem(`gist-${gistId}`, content);\n      localStorage.setItem(`gist-lang-${gistId}`, language);\n    }\n    //console.log(\"Content\");\n    //console.log(content);\n  }, [content]);\n\n  const loadContent = () => {\n    //console.log(\"loadContent\");\n    fetch(`https://api.github.com/gists/${gistId}`)\n      .then((res) => res.json())\n      .then((data) => {\n        //console.log(data);\n        const keys = Object.keys(data.files);\n        if (keys.length > 0) {\n          const first = keys.shift();\n          const language = data.files[first].language;\n          if (language !== null) {\n            setLanguage(language);\n          }\n\n          setContent(data.files[first].content);\n          const rows = data.files[first].content.split(/\\r\\n|\\r|\\n/).length;\n          setRowCount(rows);\n        }\n      });\n  };\n\n  const getLang = () => {\n    switch (language) {\n      case \"PHP\":\n        return \"lang-php\";\n      case \"Text\":\n        return \"lang-shell\"; //or lang-bash\n      case \"Bash\":\n        return \"lang-shell\";\n      case \"JavaScript\":\n        return \"lang-js\";\n      default:\n        return `lang-${language.toLowerCase()}`;\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <Hidden only={[\"xs\", \"sm\"]}>\n        <Particles\n          height={150}\n          style={{ backgroundColor: getHeaderBackgroundColor(theme) }}\n        />\n      </Hidden>\n      <Container maxWidth=\"md\" className={classes.container}>\n        <SimpleBreadcrumbs\n          links={[\n            { title: \"ÐÐ»Ð°Ð²Ð½Ð°Ñ\", link: \"/\" },\n            { title: \"ÐÐ¸ÑÑÑ\", link: \"/gists\" },\n          ]}\n          current={description.slice(0, 30)}\n          pageNumber={pageNumber}\n        />\n        <main>\n          <PrismSyntaxHighlighter children={content} className={getLang()} />\n        </main>\n      </Container>\n      <Footer />\n    </React.Fragment>\n  );\n}\n"],"sourceRoot":""}